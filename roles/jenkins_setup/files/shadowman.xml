<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1186.v8def1a_5f3944">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2086.v12b_420f036e5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2086.v12b_420f036e5">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
<properties>
  <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.40.0">
    <projectUrl>https://cicd.shadowman.dev:3000/ansible/html/</projectUrl>
    <displayName/>
  </com.coravy.hudson.plugins.github.GithubProjectProperty>
<org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec/>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
</org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
</properties>
<definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3990.vd281dd77a_388">
    <script>#!/usr/bin/env groovy

pipeline {
    agent any
    stages {
        stage('SCM Get Code') {
            steps {
                script {
                    sh '/usr/bin/git config --global http.sslVerify false'
                }
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://cicd.shadowman.dev:3000/ansible/html.git']]])
            }
        }

        stage('Installing packages') {
            steps {
                script {
                    sh '/usr/bin/python3 -m pip install pylint pylint-django bump2version Django==1.11.29 --break-system-packages'
                }
            }
        }

        stage('Static Code Checking') {
            steps {
                script {
                    sh 'find . -name \\*.py | xargs /usr/bin/python3 -m pylint --load-plugins=pylint_django -f parseable | tee pylint.log'
                    recordIssues(
                        tool: pyLint(pattern: 'pylint.log'),
                        failTotalHigh: 10,
                    )
                }
            }
        }
        stage('Build and Tag') {
            steps {
                withCredentials([gitUsernamePassword(credentialsId: 'gitea_repo', gitToolName: 'git')]) {
                    sh """
                        git reset --hard HEAD
                        git checkout
                        git fetch --tags --all --prune
                        git config --replace-all user.name ${env.GIT_USERNAME}
                        git config --replace-all user.email ${env.GIT_USERNAME}

                    """
                }
            }
        }

        stage('Controller- DevOps') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'jenkins_controller', passwordVariable: 'CONTROLLER_PASS', usernameVariable: 'CONTROLLER_USER')]) {
                    sh 'curl -u ${CONTROLLER_USER}:${CONTROLLER_PASS} -i -H "Content-Type:application/json" https://tower.shadowman.dev/api/controller/v2/workflow_job_templates/602/launch/ --data "{}"'
                }

            }
        }

    }

}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
